[{"/home/dcil142/full-stack-mern-memory-project/client/src/index.js":"1","/home/dcil142/full-stack-mern-memory-project/client/src/App.js":"2","/home/dcil142/full-stack-mern-memory-project/client/src/components/Posts/Posts.js":"3","/home/dcil142/full-stack-mern-memory-project/client/src/components/Posts/Post/Post.js":"4","/home/dcil142/full-stack-mern-memory-project/client/src/components/Form/Form.js":"5","/home/dcil142/full-stack-mern-memory-project/client/src/styles.js":"6","/home/dcil142/full-stack-mern-memory-project/client/src/components/Form/styles.js":"7","/home/dcil142/full-stack-mern-memory-project/client/src/components/Posts/Post/styles.js":"8","/home/dcil142/full-stack-mern-memory-project/client/src/components/Posts/styles.js":"9","/home/dcil142/full-stack-mern-memory-project/client/src/actions/posts.js":"10","/home/dcil142/full-stack-mern-memory-project/client/src/api/index.js":"11","/home/dcil142/full-stack-mern-memory-project/client/src/reducers/index.js":"12","/home/dcil142/full-stack-mern-memory-project/client/src/reducers/posts.js":"13"},{"size":439,"mtime":1610407427592,"results":"14","hashOfConfig":"15"},{"size":1355,"mtime":1611306236591,"results":"16","hashOfConfig":"15"},{"size":679,"mtime":1610584737777,"results":"17","hashOfConfig":"15"},{"size":1787,"mtime":1611307139952,"results":"18","hashOfConfig":"15"},{"size":2672,"mtime":1610479825835,"results":"19","hashOfConfig":"15"},{"size":354,"mtime":1610324101251,"results":"20","hashOfConfig":"15"},{"size":380,"mtime":1610325618274,"results":"21","hashOfConfig":"15"},{"size":965,"mtime":1610403729099,"results":"22","hashOfConfig":"15"},{"size":266,"mtime":1610403918969,"results":"23","hashOfConfig":"15"},{"size":507,"mtime":1610479887836,"results":"24","hashOfConfig":"15"},{"size":186,"mtime":1610476087929,"results":"25","hashOfConfig":"15"},{"size":115,"mtime":1610405340609,"results":"26","hashOfConfig":"15"},{"size":293,"mtime":1610476656205,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"qveca6",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"/home/dcil142/full-stack-mern-memory-project/client/src/index.js",[],["60","61"],"/home/dcil142/full-stack-mern-memory-project/client/src/App.js",["62","63"],"import React, { useEffect } from 'react';\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\n\nimport { getPosts } from './actions/posts';\nimport Posts from './components/Posts/Posts';\nimport Form from './components/Form/Form';\nimport Memories from './images/mem.JPG';\nimport useStyles from './styles';\n\nconst App = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n  return (\n    <Container maxWidth='lg'>\n      <AppBar className={classes.appBar} position='static' color='inherit'>\n        <Typography className={classes.heading} variant='h2' align='center'>\n          Memories\n        </Typography>\n        <img\n          className={classes.image}\n          src='{memories}'\n          // alt='memories'\n          height='60'\n        />\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid\n            container\n            justify='space-between'\n            alignItems='stretch'\n            spacing={3}\n          >\n            <Grid item xs={12} sm={7}>\n              <Posts />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Form />\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n};\n\nexport default App;\n","/home/dcil142/full-stack-mern-memory-project/client/src/components/Posts/Posts.js",["64"],"import React from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport Post from './Post/Post';\nimport useStyles from './styles';\n\nconst Posts = () => {\n  const posts = useSelector((state) => state.posts);\n  const classes = useStyles();\n\n  console.log(posts);\n  return !posts.length ? (\n    <CircularProgress />\n  ) : (\n    <Grid\n      className={classes.container}\n      container\n      alignItems='stretch'\n      spacing={3}\n    >\n      {posts.map((post) => (\n        <Grid key={post._id} item xs={12} sm={6}>\n          <post post={post} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default Posts;\n","/home/dcil142/full-stack-mern-memory-project/client/src/components/Posts/Post/Post.js",[],"/home/dcil142/full-stack-mern-memory-project/client/src/components/Form/Form.js",["65"],"import React, { useState } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\n\nimport useStyles from './styles';\nimport { createPost } from '../../actions/posts';\n\nconst Form = () => {\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: '',\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(postData);\n\n    dispatch(createPost(postData));\n  };\n\n  const clear = () => {};\n\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete='off'\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant='h6'>Creating a Memory</Typography>\n        <TextField\n          name='creator'\n          variant='outlined'\n          label='Creator'\n          fullWidth\n          value={postData.creator}\n          onChange={(e) =>\n            setPostData({ ...postData, creator: e.target.value })\n          }\n        />\n        <TextField\n          name='title'\n          variant='outlined'\n          label='Title'\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          name='message'\n          variant='outlined'\n          label='Message'\n          fullWidth\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <TextField\n          name='tags'\n          variant='outlined'\n          label='Tags'\n          fullWidth\n          value={postData.tags}\n          onChange={(e) => setPostData({ ...postData, tags: e.target.value })}\n        />\n        <div className={classes.fileInput}>\n          <FileBase\n            type='file'\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <button\n          className={classes.buttonSubmit}\n          variant='container'\n          color='primary'\n          size='large'\n          type='submit'\n          fullWidth\n        >\n          Submit\n        </button>\n\n        <button\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={clear}\n          fullWidth\n        >\n          Clear\n        </button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n","/home/dcil142/full-stack-mern-memory-project/client/src/styles.js",[],"/home/dcil142/full-stack-mern-memory-project/client/src/components/Form/styles.js",[],"/home/dcil142/full-stack-mern-memory-project/client/src/components/Posts/Post/styles.js",[],["66","67"],"/home/dcil142/full-stack-mern-memory-project/client/src/components/Posts/styles.js",[],"/home/dcil142/full-stack-mern-memory-project/client/src/actions/posts.js",[],"/home/dcil142/full-stack-mern-memory-project/client/src/api/index.js",[],"/home/dcil142/full-stack-mern-memory-project/client/src/reducers/index.js",[],"/home/dcil142/full-stack-mern-memory-project/client/src/reducers/posts.js",["68"],"//posts are our states\n\n//import Posts from '../components/Posts/Posts';\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case 'FETCH_ALL':\n      return action.payload;\n\n    case 'CREATE':\n      return [...posts, action.payload];\n\n    default:\n      return posts;\n  }\n};\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":8,"column":8,"nodeType":"75","messageId":"76","endLine":8,"endColumn":16},{"ruleId":"77","severity":1,"message":"78","line":24,"column":9,"nodeType":"79","endLine":29,"endColumn":11},{"ruleId":"73","severity":1,"message":"80","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":12},{"ruleId":"73","severity":1,"message":"81","line":2,"column":21,"nodeType":"75","messageId":"76","endLine":2,"endColumn":27},{"ruleId":"69","replacedBy":"82"},{"ruleId":"71","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":5,"column":1,"nodeType":"86","endLine":16,"endColumn":3},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Memories' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Post' is defined but never used.","'Button' is defined but never used.",["87"],["88"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]